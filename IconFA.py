import functools

from gdo.base.Render import Mode
from gdo.ui.IconProvider import IconProvider


class IconFA(IconProvider):

    @classmethod
    @functools.cache
    def MAP(cls) -> dict:
        return {
            'add': 'plus',
            'address': 'address-book',
            'alert': 'bell',
            'all': 'list',
            'amt': 'calculator',
            'arrow_down': 'sort-down',
            'arrow_left': 'arrow-left',
            'arrow_right': 'arrow-right',
            'arrow_up': 'sort-up',
            'audio': 'itunes-note',
            'back': 'arrow-left',
            'bank': 'piggy-bank',
            'bars': 'bars',
            'bee': 'cow',
            'bell': 'bell',
            'birthday': 'birthday-cake',
            'block': 'ban',
            'book': 'book',
            'bulb': 'lightbulb',
            'business': 'store',
            'calendar': 'calendar-alt',
            'captcha': 'lock',
            'caret': 'caret-right',
            'cc': 'address-card',
            'check': 'check',
            'close': 'window-close',
            'code': 'code',
            'color': 'palette',
            'copyright': 'copyright',
            'construction': 'person-digging',
            'country': 'flag',
            'create': 'plus-circle',
            'credits': 'credit-card',
            'cut': 'cut',
            'delete': 'minus-circle',
            'diamond': 'diamond',
            'done': 'check',
            'done_all': 'check-double',
            'download': 'download',
            'edit': 'edit',
            'email': 'envelope',
            'error': 'exclamation-triangle',
            'eye': 'eye',
            'face': 'user',
            'female': 'female',
            'file': 'paperclip',
            'flag': 'flag',
            'flash': 'bolt',
            'folder': 'folder',
            'font': 'font',
            'format': 'underline',
            'gender': 'venus-mars',
            'group': 'users',
            'guitar': 'guitar',
            'heart': 'heart',
            'help': 'question-circle',
            'house': 'house',
            'icecream': 'ice-cream',
            'image': 'image',
            'info': 'info',
            'language': 'language',
            'legal': 'section',
            'level': 'trophy',
            'license': 'paragraph',
            'like': 'thumbs-up',
            'link': 'chain',
            'list': 'th-list',
            'location': 'location-dot',
            'lock': 'lock',
            'male': 'male',
            'medal': 'medal',
            'menu': 'bars',
            'message': 'comment-dots',
            'minus': 'minus',
            'money': 'money-bill',
            'numeric': 'hashtag',
            'password': 'key',
            'pause': 'pause-circle',
            'percent': 'percent',
            'phone': 'phone',
            'plus': 'plus',
            'position': 'map-marker',
            'print': 'print',
            'qrcode': 'qrcode',
            'question': 'question',
            'quote': 'quote-left',
            'remove': 'minus',
            'reply': 'reply',
            'required': 'asterisk',
            'schedule': 'clipboard-list',
            'search': 'search',
            'settings': 'cog',
            'spiderweb': 'dharmachakra',
            'star': 'star',
            'stop': 'stop',
            'sun': 'sun',
            'table': 'table',
            'tag': 'tags',
            'thumbs_up': 'thumbs-up',
            'thumbs_down': 'thumbs-down',
            'thumbs_none': 'hand-point-right',
            'time': 'stopwatch',
            'title': 'hashtag',
            'trophy': 'trophy',
            'unicorn': 'unicorn',
            'upload': 'upload',
            'url': 'link',
            'user': 'user',
            'users': 'users',
            'view': 'eye',
            'vote': 'vote-yea',
            'wait': 'alarm-clock',
            'whatsapp': 'whatsapp fa-brands',
            'work': 'person-digging',
            'write': 'pencil',
        }

    @classmethod
    def display_icon_html(cls, name: str, mode: Mode, alt: str, color: str = None, size: str = None) -> str:
        from gdo.icon_fa.module_icon_fa import module_icon_fa
        ico = cls.MAP()[name]
        alt = f'role="icon" aria-label="{alt}"'
        color = f" color: {color};" if color else ""
        size = f" font-size: {size};" if size else ""
        style = f' style="{color} {size}"' if color or size else ""
        fas = module_icon_fa.instance().cfg_fa_style()
        return f'<span class="gdt-icon gdt-fa-icon"{style}><i {alt} class="{fas} fa-{ico}"></i></span>'
